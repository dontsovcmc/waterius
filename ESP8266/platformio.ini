; Для компиляции скопируйте secrets.ini.template в secrets.ini файл

; Если у вас в Windows имя пользователя содержит кириллицу, измените home_dir
; [platformio]
; home_dir = C:\platformio

[platformio]
default_envs = esp01_1m ; esp01_1m ; nodemcuv2  ;

;extra_configs = secrets.ini  

[env]
firmware_version = "\"1.1.5\""

[libraries]
arduinojson = ArduinoJson@7.0.2
pubsubclient = PubSubClient@2.8
espasyncwebserver = https://github.com/waterius/ESPAsyncWebServer.git#20230926   

[env:esp01_1m]
extra_scripts = post:post_compile.py

board = esp01_1m
; Измените на свой порт! если не раскомментировать порт будет определяться автоматически
upload_port = /dev/cu.usbserial-210
upload_speed = 115200
board_upload.resetmethod = nodemcu ;обязательно nodemcu даже для esp01 иначе с platformio не будет загружаться 
board_build.f_cpu = 80000000L
board_build.flash_mode = qio    ; dio если проблемы с памятью
board_build.filesystem = littlefs

board_build.ldscript = eagle.flash.1m256.ld ;littlefs ~256KB  

monitor_filters = time, colorize, esp8266_exception_decoder 

monitor_speed = 115200
; https://github.com/platformio/platform-espressif8266.git
platform = espressif8266@4.1.0  # 4.2.1 уже есть
framework = arduino

lib_deps =
  ${libraries.pubsubclient}
  ${libraries.arduinojson}
  ${libraries.espasyncwebserver}

; Для упрощения тестирования можно задать значения и Ватериус передаст показания
; при нажатии кнопки. 
  
; Для тестирования и отладки
build_flags =
            -DFIRMWARE_VERSION=${this.firmware_version}
            -DLOG_FREE_HEAP
            -DLOG_LEVEL_INFO ; LOG_LEVEL_INFO DLOG_LEVEL_DEBUG логирование в Serial
           ; -DDEBUG_ESP_WIFI
           ; -DDEBUG_ESP_CORE
           ; -DDEBUG_ESP_PORT=Serial 
           ; -DWIFI_SSID=${secrets.wifi_ssid}
           ; -DWIFI_PASS=${secrets.wifi_password}
           ; -DWATERIUS_EMAIL=${secrets.waterius_email} 
; Для отладки HTTP клиента
           ; -DDEBUG_ESP_HTTP_CLIENT=1
           ; -DDEBUG_ESP_SSL
; для отладки MQTT
           ; -DMQTT_HOST=${secrets.mqtt_host}
           ; -DMQTT_LOGIN=${secrets.mqtt_username}
           ; -DMQTT_PASSWORD=${secrets.mqtt_password}
           ; -DMQTT_AUTO_DISCOVERY=true
; отключить неиспользуемые компоненты
           ; -DHTTPS_DISABLED
           ; -DMQTT_DISABLED
             
           ; -DDEBUG_VOLTAGE ;отладка мониторинга напряжения
           ; -DDEFAULT_WAKEUP_PERIOD_MIN=1 ; время спячки по умолчанию
                
                
[env:nodemcuv2]
board = nodemcuv2
upload_port = /dev/cu.usbserial-0001
upload_speed = 921800

board_build.f_cpu = 80000000L
board_build.flash_mode = qio    ; dio если проблемы с памятью
board_build.filesystem = littlefs

board_build.ldscript = eagle.flash.1m256.ld   ;littlefs ~256KB  

monitor_speed = 115200
platform = espressif8266@4.1.0
framework = arduino


lib_deps =
  ${libraries.pubsubclient}
  ${libraries.arduinojson}
  ${libraries.espasyncwebserver}


build_flags = 
            -DFIRMWARE_VERSION=${this.firmware_version}
             -DLOG_FREE_HEAP
             -DLOG_LEVEL_INFO ; LOG_LEVEL_INFO  логирование в Serial
             -DWM_DEBUG_LEVEL=DEBUG_MAX
             -DDEBUG_ESP_WIFI
             -DDEBUG_ESP_CORE
            ; -DDEBUG_ESP_PORT=Serial 
            ;-DWIFI_SSID=${secrets.wifi_ssid}
            ;-DWIFI_PASS=${secrets.wifi_password}
            ;-DWATERIUS_EMAIL=${secrets.waterius_email} 
; Для отладки HTTP клиента
           ; -DDEBUG_ESP_HTTP_CLIENT=1
           ; -DDEBUG_ESP_SSL
; для отладки MQTT
           ; -DMQTT_HOST=${secrets.mqtt_host}
           ; -DMQTT_LOGIN=${secrets.mqtt_username}
           ; -DMQTT_PASSWORD=${secrets.mqtt_password}
           ; -DMQTT_AUTO_DISCOVERY=true
; отключить неиспользуемые компоненты
           ; -DHTTPS_DISABLED
           ; -DMQTT_DISABLED
             
           ; -DDEBUG_VOLTAGE ;отладка мониторинга напряжения
           ; -DDEFAULT_WAKEUP_PERIOD_MIN=1 ; время спячки по умолчанию

; Travis-CI
; platformio ci --project-conf=./platformio.ini -v .

; ========================================
; ESPTOOL Полезные команды python пакета esptool
; ========================================
;
; Загрузить прошивку
; -------------------
; Две команды - прошивка и файловая система
;
; platformio run --target upload --environment esp01_1m 
; platformio run --target uploadfs --environment esp01_1m
;
;
; Очистить память ESP
; -------------------
; python -m esptool --port /dev/cu.wchusbserial1420 --baud 115200 erase_flash
;
; Записать скомпилированную прошивку 
; -------------------
; python -m esptool --port /dev/cu.wchusbserial1420 --baud 115200 write_flash 0x0 esp8266.bin
;
; Просмотр стэка при падении прошивки
; -------------------
; 
; /waterius/ESP8266/.pio/build/esp01_1m/firmware.elf


;
; cp .pio/build/esp01_1m/firmware.elf ./../esp8266-1.0.1.elf
; cp .pio/build/esp01_1m/firmware.bin ./../esp8266-1.0.1.bin
; cp .pio/build/esp01_1m/littlefs.bin ./../esp8266-1.0.1-fs.bin
